version: '3.8'

services:
  expensetracker-backend:
    build: ./server
    container_name: expensetracker-backend-v1
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://expensetracker-db:5432/mydb
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_DATA_REDIS_HOST: expensetracker-redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - expensetracker-db
      - expensetracker-redis
    networks:
      - expensetracker-network-v1
    restart: always

  expensetracker-frontend:
    build: ./client
    container_name: expensetracker-frontend-v1
    ports:
      - "80:80"
    depends_on:
      - expensetracker-backend
    networks:
      - expensetracker-network-v1
    restart: always

  expensetracker-db:
    image: postgres:16.2-alpine
    container_name: expensetracker-db-v1
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - expensetracker-db-data-v1:/var/lib/postgresql/data
    networks:
      - expensetracker-network-v1
    restart: always

  expensetracker-redis:
    image: redis:7.2.5-alpine
    container_name: expensetracker-redis-v1
    ports:
      - "6379:6379"
    networks:
      - expensetracker-network-v1
    restart: always

networks:
  expensetracker-network-v1:
    driver: bridge

volumes:
  expensetracker-db-data-v1:


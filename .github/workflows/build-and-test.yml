name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dockerize
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: expensetrackerdb
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test Backend
        run: >
          mvn -f server/pom.xml test
          -Dspring.datasource.url=jdbc:postgresql://localhost:5432/expensetrackerdb
          -Dspring.datasource.username=${{ secrets.TEST_DB_USER }}
          -Dspring.datasource.password=${{ secrets.TEST_DB_PASSWORD }}

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install, Build, and Test Frontend
        run: |
          cd client
          npm install
          npm run build
          npm test -- --watchAll=false

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Images
        run: docker compose build
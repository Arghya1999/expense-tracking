name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dockerize # Also run on the dockerize branch for testing
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services: # Add services block here
      postgres:
        image: postgres:13 # Use a specific PostgreSQL version
        env:
          POSTGRES_DB: expensetrackerdb # Match your application.yml database name
          POSTGRES_USER: postgres # Match your application.yml username
          POSTGRES_PASSWORD: password # Match your application.yml password
        ports:
          - 5432:5432 # Map container port to host port
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21 for Backend
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build and Test Backend
      run: |
        cd server
        mvn test -Dspring.datasource.url=jdbc:postgresql://localhost:5432/expensetrackerdb \
                 -Dspring.datasource.username=postgres \
                 -Dspring.datasource.password=password

    - name: Set up Node.js for Frontend
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Use a recent LTS version
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install Frontend Dependencies
      run: |
        cd client
        npm install

    - name: Build Frontend
      run: |
        cd client
        npm run build

    - name: Test Frontend
      run: |
        cd client
        npm test -- --watchAll=false # Run tests once, not in watch mode

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Images
      run:
        docker-compose build
